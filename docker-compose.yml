version: '3.8'

services:
  django:
    build: .
    container_name: django
    entrypoint: [ "/usr/src/taskapi/entrypoint.sh" ]
    volumes:
      - .:/usr/src/taskapi
      - ./static:/usr/src/taskapi/static
      - ./media:/usr/src/taskapi/media
    ports:
      - 8000:8000
    env_file:
      - .env
    depends_on:
      - pgdb

  pgdb:
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    container_name: pgdb

  redis:
    image: redis:alpine
    container_name: redis

  celery:
    restart: always
    build:
      context: .
    command: celery -A TaskApp worker --loglevel=info -P eventlet
    volumes:
      - .:/usr/src/taskapi
    container_name: celery
    depends_on:
      - pgdb
      - redis
      - django

  celery-beat:
    build: .
    command: celery -A TaskApp beat  -l info
    volumes:
      - .:/usr/src/taskapi/
    container_name: celery-beat
    depends_on:
      - celery
      - pgdb
      - redis

  nginx:
    build: ./nginx
    container_name: nginx
    restart: on-failure
    ports:
      - 80:80
    volumes:
      - ./static:/static
      - ./media:/media
    depends_on:
      - django

  react-app:
    image: node:14
    container_name: react-app
    working_dir: /usr/src/taskapi/frontend
    volumes:
      - ./frontend:/usr/src/taskapi/frontend
    ports:
      - 3000:3000
    command: npm start
    depends_on:
      - django


volumes:
  postgres_data: